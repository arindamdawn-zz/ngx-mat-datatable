{"version":3,"file":"shimmer-loader.js","sources":["ng:/shimmer-loader/lib/shimmer-loader.service.ts","ng:/shimmer-loader/lib/shimmer-loader.component.ts","ng:/shimmer-loader/lib/shimmer-loader.module.ts","ng:/shimmer-loader/public-api.ts","ng:/shimmer-loader/shimmer-loader.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKa,oBAAoB,GAAjC,MAAa,oBAAoB;IAE/B;KAAiB;;mHAClB;8LAC6L,AAA9L;AAJa;mBAAoB,oBAHhC,UAAU,CAAC,9CCaC,sBAAsB,GAAnC,MAAa,sBAAsB;ADZjC,UAAU,EAAE,MAAM,dCgBlB;IDfD,CAAC,IACW,oBAAoB,CAGhC,tBCSU,eAAU,GAAkC,WAAW,CAAC;KAEjD;IAEhB,WAAW,CAAC,OAAsB;QAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;KACpE;IAED,QAAQ,MAAK;IAEb,oBAAoB,CAAC,KAAa;QAChC,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC9B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;QACD,OAAO,OAAO,CAAC;KAChB;CACF;;;;;;;;;;;;owCAAA;AAlBU;IAAR,KAAK,EAAE;qDAAe;AACd;IAAR,KAAK,EAAE;0DAAyD,CACnE,AAiBA;AApBa;qBAAsB,oBANlC,SAAS,CAAC,/CCAE,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;IDCjC,QAAQ,EAAE,oBAAoB,UAC9B;ECFiC,CAAtB,mBAAmB,oBAL/B,QAAQ,CAAC,UACR,YAAY,EAAE,CAAC,sBAAsB,CAAC,UACtC,OAAO,EAAE,CAAC,YAAY,CAAC,UACvB,OAAO,EAAE,CAAC,sBAAsB,CAAC;GAClC,CAAC,IACW,mBAAmB,CAAG;;;;;qBDEa,UAE9C,eAAe,EAAE;sBAAuB,CAAC,MAAM;;;;;;oOAChD,CAAC,IACW,sBAAsB,CAmBlC;;;;;;;;;;;;;;;0BCxBD;;ACVA;;GAEG;;ACFH;;GAEG","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShimmerLoaderService {\r\n\r\n  constructor() { }\r\n}\r\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  OnChanges,\n  SimpleChanges\n} from \"@angular/core\";\n\n@Component({\n  selector: \"lib-shimmer-loader\",\n  templateUrl: \"./shimmer-loader.component.html\",\n  styleUrls: [\"./shimmer-loader.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShimmerLoaderComponent implements OnInit, OnChanges {\n  @Input() count: number;\n  @Input() loaderType: \"datatable\" | \"schedule_card\" = \"datatable\";\n  items: number[];\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.items = this.generateFakeSkeleton(changes.count.currentValue);\n  }\n\n  ngOnInit() {}\n\n  generateFakeSkeleton(count: number): Array<number> {\n    const indexes = [];\n    for (let i = 0; i < count; i++) {\n      indexes.push(i);\n    }\n    return indexes;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ShimmerLoaderComponent } from \"./shimmer-loader.component\";\n\n@NgModule({\n  declarations: [ShimmerLoaderComponent],\n  imports: [CommonModule],\n  exports: [ShimmerLoaderComponent]\n})\nexport class ShimmerLoaderModule {}\n","/*\n * Public API Surface of shimmer-loader\n */\n\nexport * from \"./lib/shimmer-loader.service\";\nexport * from \"./lib/shimmer-loader.component\";\nexport * from \"./lib/shimmer-loader.module\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}